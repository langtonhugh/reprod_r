---
title: "Tips for reproducibility in R"
author: "RUM-UMC"
date: "25 September, 2024"
format:
  revealjs:
    auto-stretch: false
editor: visual
editor_options: 
  chunk_output_type: console
date-format: long
---

## What is reproducibility?

> "We define reproducible research as work that can be independently recreated from the same data and the same code that the original team used."

<center>

![Source: [The Turing Way](https://book.the-turing-way.org/reproducible-research/overview/overview-definitions)](https://book.the-turing-way.org/_images/reproducible-matrix.jpg){width="500"}

</center>

## 

<center>![](img/drake.png){width="800"}</center>

## Focus your energy

1.  Script *everything* ([De Graaff., 2021](https://www.dropbox.com/s/vn7rn9m5ht2miol/reproducibility.pdf?e=1&dl=0))
2.  Project folders
3.  Options in RStudio
4.  `renv`
5.  Quarto

## Script *everything*

<br>

"R is a statistics software" `r emo::ji("angry")` Well, partly... but it can (probably) be used for your [entire computational workflow](https://wec.wur.nl/dse/images/11/tidyverse%20workflow.png).

<br>

If you **can** script it, then **script it**.

<br>

RStudio can also support other languages (e.g., [Python](https://posit.co/blog/three-ways-to-program-in-python-with-rstudio/))

## Project folders

<br> <br>

<center>

![Source: [Jenny Bryan](https://www.tidyverse.org/blog/2017/12/workflow-vs-script/)](img/setwd.png){width="700"}

</center>

## Project folders

<br>

<center>

![](img/project_screenshot.png){width="700"}

<br>

![](img/folder_screenshot.png){width="800"}

</center>

## Project folders

Avoids this:

```{r, eval = FALSE, echo = TRUE}
setwd("C:/SamL/my_projects/ridiculous_folder_name/data")

raw_data_df <- read_csv("raw_records.csv")
```

<br> And this:

```{r, eval = FALSE, echo = TRUE}
raw_data_df <- read_csv("C:/SamL/my_projects/ridiculous_folder_name/data/raw_records.csv")
```

<br>

But instead:

```{r, eval = FALSE, echo = TRUE}
raw_data_df <- read_csv("data/raw_records.csv")
```

</center>

<!-- ## Options in RStudio -->

<!-- <br> -->

<!-- <br> -->

<!-- <center> -->

<!-- `Ctrl + shift + F10` -->

<!-- <br> -->

<!-- `Ctrl + A` -->

<!-- <br> -->

<!-- `Ctrl + Enter` -->

<!-- </center> -->

## Options in RStudio

<br>

<center>

![](img/global_options.png){width="700"}

*Workspaces are pure evil. Turn them off.*

<!-- ## `here` package -->

<!-- Bad: -->

<!-- ```{r, eval = FALSE, echo = TRUE} -->

<!-- raw_data_df <- read_csv("C:/SamL/my_projects/ridiculous_folder_name/data/raw_records.csv") -->

<!-- ``` -->

<!-- <br> -->

<!-- Good: -->

<!-- ```{r, eval = FALSE, echo = TRUE} -->

<!-- raw_data_df <- read_csv("data/raw_records.csv") -->

<!-- ``` -->

<!-- <br> -->

<!-- Even better: -->

<!-- ```{r, eval = FALSE, echo = TRUE} -->

<!-- raw_data_df <- read_csv( -->

<!--   here("data", "raw_records.csv") -->

<!-- ) -->

<!-- ``` -->

## `renv`

<center>

![](img/renv.png){width="400"}

[Read this](https://rstudio.github.io/renv/).

</center>

## `renv` demonstration

## `renv` demonstration

1.  Create a project file
2.  `renv::init()`
3.  Do some stuff
4.  `renv::snapshot()`
5.  Share with someone
6.  `renv::restore()`
7.  Do some other stuff
8.  Go to point 4...

## `renv` within OneView

<br>

<center>**Activating the virtual environment causes RStudio to crash.**</center>

<br>

But a low-effort alternative:

1.  Create a project file
2.  Do some stuff
3.  When you're done: `renv::snapshot()`

## `renv` within OneView

<br>

<center>**Activating the virtual environment causes RStudio to crash.**</center>

<br>

Similar alternative: save your session info.

<br>

```{r, eval = F, echo = T}
writeLines(capture.output(sessionInfo()), "sessionInfo.txt")`
```

## Quarto

<br>

```{r}
effiency_number <- 200
```

Using Quarto allows you to make cool documents (and slideshows) while automating your results, making you approximately `r effiency_number`% more efficient.

## Quarto

<br>

```{r}
effiency_number <- 200
```

Using Quarto allows you to make cool documents (and slideshows) while automating your results, making you approximately `r effiency_number`% more efficient.

![](img/quarto.png){width="1000"}

## Quarto

<br>

```{r}
effiency_number <- 200
```

Using Quarto allows you to make cool documents (and slideshows) while automating your results, making you approximately `r effiency_number`% more efficient.

![](img/quarto.png){width="1000"}

It also makes everything [look better](https://github.com/danieltomasz/hikmah-academic-quarto?tab=readme-ov-file).

## Summary

::: columns
::: {.column width="50%"}
DOs

-   Script **everything**\
-   Use project files
-   Use `renv` to manage package versions
-   Use Quarto
:::

::: {.column width="50%"}
DON'Ts

-   Use `setwd()`
-   Save workspaces
-   Manually copy results
:::
:::

## Advertisement: CODECHECK

<center>

<br>

Want a 'second pair of eyes' on your R workflow?

And a 'bonus point' for a journal submission?

<br>

![](img/codecheck_logo.svg){width="300" fig-align="center"}

Then [email me](mailto:s.h.langton@amsterdamumc.nl) or ping us via ServiceNow ('Research Software Management')

</center>

## Extras

### Assumed:

-   Documentation (including comments)
-   Linear scripts
-   Function conflicts

### Bonus points:

-   `here` package
-   Modular scripts
-   Version control (e.g., GitHub)
